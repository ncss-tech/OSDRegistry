name: refresh-osd

# just for testing
on: push

# eventually, refresh will only occur on scheduled interval
# on:
#  schedule:
##  e.g. weekly cycle
#    - cron:  '* * * * */6'
##  e.g. every 15 minutes
#    - cron:  '*/15 * * * *'

# see: https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions
# and: https://github.com/r-lib/actions
jobs:
  refresh:
    runs-on: ubuntu-20.04
    
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ~/.local/share/renv
        key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
        restore-keys: ${{ runner.os }}-renv-
    - run: sudo apt install -y libcurl4-openssl-dev
    - uses: r-lib/actions/setup-r@v1
    - run: wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    - run: sudo apt install ./google-chrome-stable_current_amd64.deb
    - run: Rscript -e 'install.packages(c("devtools"))'
    - run: Rscript -e 'saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)'
    - run: Rscript -e 'remotes::install_github("ropensci/RSelenium")'
    - run: Rscript -e 'writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")'
    - run: Rscript -e 'remotes::install_deps(dependencies = TRUE)'
    - run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')
    - run: R CMD build --no-manual ../OSDRegistry
    - run: Rscript -e 'system2("R", paste0(sprintf("CMD INSTALL OSDRegistry_%s.tar.gz", read.dcf("DESCRIPTION")[,"Version"])))'
    - run: Rscript -e 'OSDRegistry::refresh_registry()'
    - run: git config user.email github-actions@github.com
    - run: git config user.name SeriesCuratorBot
    - run: git add OSD/*/*.txt
    - run: Rscript -e 'system(sprintf("git commit -am \"OSD Data Refresh - %s\"", Sys.time()))'
    - run: git push
    - run: Rscript -e 'system(sprintf("tar -czvf OSDSnapshot_%s.tar.gz OSD", Sys.Date()))'
    - uses: actions/upload-artifact@v2
      with:
        name: OSD-data-snapshot
        path: "OSDSnapshot_*.tar.gz"
env:
  DEFAULT_BRANCH: main
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
